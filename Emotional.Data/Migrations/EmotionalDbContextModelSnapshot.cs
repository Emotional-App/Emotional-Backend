// <auto-generated />
using System;
using Emotional.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Emotional.Data.Migrations
{
    [DbContext(typeof(EmotionalDbContext))]
    partial class EmotionalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Emotional.Data.Entities.Diary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Diaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6846c40c-48a0-4529-8126-9d324b0917e8"),
                            Category = (byte)0,
                            Content = "Today is a good day.",
                            CreatedOn = new DateTime(2021, 7, 3, 1, 5, 32, 671, DateTimeKind.Utc).AddTicks(5783),
                            UserId = new Guid("10713172-9b96-4e83-bab8-45d3c4c23b96")
                        });
                });

            modelBuilder.Entity("Emotional.Data.Entities.Emotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Percentage")
                        .HasColumnType("real");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Emotions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e0494cf-cbe9-4e74-85bc-9954a5f6cbe7"),
                            Category = (byte)5,
                            CategoryName = "PEACEFUL",
                            CreatedOn = new DateTime(2021, 7, 3, 1, 5, 32, 671, DateTimeKind.Utc).AddTicks(3172),
                            Percentage = 70f,
                            UserId = new Guid("10713172-9b96-4e83-bab8-45d3c4c23b96")
                        });
                });

            modelBuilder.Entity("Emotional.Data.Entities.Music", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusicUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Musics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d106c65-5430-4ac8-a5d1-39b27c928715"),
                            Category = (byte)5,
                            CategoryName = "PEACEFUL",
                            MusicUrl = "https://freesound.org/data/previews/554/554415_2975501-lq.mp3",
                            Name = "Peaceful-sound-001"
                        });
                });

            modelBuilder.Entity("Emotional.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10713172-9b96-4e83-bab8-45d3c4c23b96"),
                            Email = "Emotional@gmail.com",
                            HashPassword = "AQAAAAEAACcQAAAAEC0r18UxVUy4PZ93ScHl5th5VvPlhdoBIhlpn/8tJ/XF5O2a7RBQScI6c+AoUvUdhQ==",
                            Name = "Emotional"
                        });
                });

            modelBuilder.Entity("Emotional.Data.Entities.Diary", b =>
                {
                    b.HasOne("Emotional.Data.Entities.User", "User")
                        .WithMany("Diaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Emotional.Data.Entities.Emotion", b =>
                {
                    b.HasOne("Emotional.Data.Entities.User", "User")
                        .WithMany("Emotions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Emotional.Data.Entities.User", b =>
                {
                    b.Navigation("Diaries");

                    b.Navigation("Emotions");
                });
#pragma warning restore 612, 618
        }
    }
}
