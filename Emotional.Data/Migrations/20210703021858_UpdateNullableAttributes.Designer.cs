// <auto-generated />
using System;
using Emotional.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Emotional.Data.Migrations
{
    [DbContext(typeof(EmotionalDbContext))]
    [Migration("20210703021858_UpdateNullableAttributes")]
    partial class UpdateNullableAttributes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Emotional.Data.Entities.Diary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("Category")
                        .HasColumnType("tinyint");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Diaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8dc8c0d6-aeb1-4d54-9b61-c4ef970eb619"),
                            Content = "Today is a good day.",
                            CreatedOn = new DateTime(2021, 7, 3, 2, 18, 57, 967, DateTimeKind.Utc).AddTicks(8649),
                            UserId = new Guid("8a30ab77-eb1e-4695-af89-3af93f491497")
                        });
                });

            modelBuilder.Entity("Emotional.Data.Entities.Emotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Percentage")
                        .HasColumnType("real");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Emotions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb3867fe-107c-470b-a351-89bb7570efa6"),
                            Category = (byte)5,
                            CategoryName = "PEACEFUL",
                            CreatedOn = new DateTime(2021, 7, 3, 2, 18, 57, 967, DateTimeKind.Utc).AddTicks(4625),
                            Percentage = 70f,
                            UserId = new Guid("8a30ab77-eb1e-4695-af89-3af93f491497")
                        });
                });

            modelBuilder.Entity("Emotional.Data.Entities.Music", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusicUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Musics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d7c2e78f-ed6a-4968-a022-575771005f36"),
                            Category = (byte)5,
                            CategoryName = "PEACEFUL",
                            MusicUrl = "https://freesound.org/data/previews/554/554415_2975501-lq.mp3",
                            Name = "Peaceful-sound-001"
                        });
                });

            modelBuilder.Entity("Emotional.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a30ab77-eb1e-4695-af89-3af93f491497"),
                            Email = "Emotional@gmail.com",
                            HashPassword = "AQAAAAEAACcQAAAAEGyiPePFbiytQkffniz2c8NLekbtJxGWkrm55pfFOBNqm7zCiPZAV9Um8j94OMmHJA==",
                            Name = "Emotional"
                        });
                });

            modelBuilder.Entity("Emotional.Data.Entities.Diary", b =>
                {
                    b.HasOne("Emotional.Data.Entities.User", "User")
                        .WithMany("Diaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Emotional.Data.Entities.Emotion", b =>
                {
                    b.HasOne("Emotional.Data.Entities.User", "User")
                        .WithMany("Emotions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Emotional.Data.Entities.User", b =>
                {
                    b.Navigation("Diaries");

                    b.Navigation("Emotions");
                });
#pragma warning restore 612, 618
        }
    }
}
